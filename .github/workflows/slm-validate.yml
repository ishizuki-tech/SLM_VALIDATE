name: SLM Validate

on:
  workflow_dispatch:
  push:
    paths:
      - 'download.sh'
      - 'main.py'
      - 'scripts/**'
      - 'data/**'
      - 'requirements.txt'
      - '.github/workflows/slm-validate.yml'

concurrency:
  group: slm-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest
    permissions:
      contents: write   # needed only if you want to commit README/artifacts back

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install -U llama-cpp-python rich
          fi

      - name: Cache models
        uses: actions/cache@v4
        with:
          path: models
          key: models-${{ hashFiles('download.sh') }}

      - name: Run download.sh
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          chmod +x download.sh
          ./download.sh -d models --verify

      - name: Clean previous outputs (fresh run)
        run: |
          set -e
          rm -f results.jsonl results.csv OUTPUT.md || true
          rm -rf logs runs || true
          mkdir -p logs runs

      - name: Run evaluator (batch)
        run: |
          set -e
          MODEL_PATH="${MODEL_PATH:-$(ls -1 ./models/*.gguf 2>/dev/null | head -n1)}"
          if [ -z "$MODEL_PATH" ]; then
            echo "No .gguf model found under ./models" >&2
            exit 1
          fi
          python main.py \
            --model "$MODEL_PATH" \
            --input-jsonl survey_inputs_00.jsonl \
            --output-jsonl results.jsonl \
            --prompts-jsonl all.prompts.jsonl \
            --out-csv results.csv \
            --quiet-batch

      - name: Generate OUTPUT from JSONL
        run: |
          set -e
          # Prefer an executable script; fall back to Python names
          if [ -x scripts/jsonl_to_readmewo ]; then
            scripts/jsonl_to_readmewo runs/out.jsonl > OUTPUT.md
          elif [ -f scripts/jsonl_to_readmewo.py ]; then
            python scripts/jsonl_to_readmewo.py runs/out.jsonl > OUTPUT.md
          elif [ -f scripts/jsonl_to_readme.py ]; then
            python scripts/jsonl_to_readme.py runs/out.jsonl > OUTPUT.md
          else
            echo "Converter script not found (scripts/jsonl_to_readmewo[.py] or jsonl_to_readme.py)." >&2
            exit 1
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: slm-results
          path: |
            runs/out.jsonl
            runs/out.csv
            OUTPUT.md

      # Optional: auto-commit README & outputs back to the repo
      - name: Commit OUTPUT (optional)
        if: ${{ success() }}
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "CI: update OUTPUT from JSONL"
          file_pattern: OUTPUT.md runs/out.jsonl runs/out.csv
